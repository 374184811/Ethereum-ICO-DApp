1.介绍项目；介绍项目中困难的地方；追问一些问题；然后聊到性能问题，介绍项目中的性能前后对比；
2.技术选择为什么要用react；对比下react和vue；
3.redux和vuex对比；说下它们的设计思想；
4.性能优化的方法；说下visual-list的思想；怎么确保快速下滑的白屏问题；如果一下直接到底部呢；
5.nodejs知道吗
6.说下你们用的路由；改变路由时候，react-router是怎么切换页面的；
7.es6用过哪些东西；箭头函数和普通函数的区别；除了这些还有吗? 箭头函数和Generator（没答上最后一点）
8.es6和es5继承的区别；defineProperty和proxy的区别；
9.出了一个题目现场写；（没答上）
10.做过小程序吗，rn，flutter会吗（不会）
11.你是怎么学习的

webpack、hrm、脚手架配置、插件、loader原理、网络安全、react框架性能优化、js bridge

1、说出具体的js的基础类型、复杂类型
2、说一说常见的数据结构以及他们的特性
3、特定问了数据结构：链表 和 堆
4、说说浏览器缓存机制：强缓存和协商缓存的含义
5、强缓存是利用了Http头部的哪几个字段？
5、Cache-Control: max-age的字段的单位是什么？Expires的格式是什么？
6、强缓存和协商缓存命中后分别返回什么样的状态码？
7、Etag是怎么生成的？默认包含哪些？
8、有了last-Modified，为什么要需要Etag?
9、jsp的生命周期？js变量的生命周期？（没听清楚）
10、用原生js怎么去实现AJAX
11、什么是csrf攻击？具体的攻击方式是怎么样的？
12、csrf的防范措施以及 csrf token在客户端和服务器的交互方式 以及 客户端怎么存储token
13、XSS攻击是什么？如何防范

1.事件委托
2.跨域请求存在的原因
3.为什么移动端点击会有延迟
4.对时间循环有没有了解
5.说一下了解的原型
6.浏览器缓存
7.浏览器储存格式有哪些
8.微事件和宏事件
9.JS当中有哪些是微事件和宏事件
10.浏览器同源策略
11.存绘回流

JS中的基础数据类型：基础类型与引用类型的存放位置是哪里？
性能优化：有特色的深入的东西；网上那些面试官说，这些都是些普遍的优化，有没有更加深入一点的
浏览器缓存：
1.为啥有了last-modified还要有etag
2.为啥读取的时候先从disk cache再从memory cache
3.Exqires时间是什么格式
4.Cache-control 的max-age是什么格式？单位是啥
csrf攻击:
如何被攻击的为什么会被攻击？如何防范？
xSs攻击:我说需要将内容转义，他问怎么转义，转义成什么.
实际项目中有没有做过安全防护
tcp的四次挥手
tcp与udp的区别

介绍自己的工作经历和项目经历，项目相关工作和技术问题，业务内容等
项目问完之后就开始问基础：
闭包以及实际行用
原型原型链
继承的方式以及具体实现
New 一个对象的时候做了什么，绑定this到新对象的时候是怎么绑定的
BFC
重绘回流，具体指什么，哪些会导致回流(重排)，怎么优化
页面刷新到显示 经历了什么，越详细越好
http缓存
执行上下文
作用域，作用域链
垃圾回收
原生的ajax ，这个会问到具体点，传参，请求头的设置==
节流和防抖的具体实现，浏览器的缓存
跨域
平时会做哪些性能优化
浏览器缓存
做项目当中怎么选择图片
事件代理，这个要给出具体实现方案
target和currenttarget的区别
setTimeOut3秒后一定会执行吗，考的js执行机制
onload和DOMContentLoaded区别
tcp和udp
页面白屏时间计算
Csrf的攻击防范，以及具体的实施过程，这个问的很细，问道了具体怎么攻击
浏览器的错误捕获，如果让你设计一个捕获异常的sdk 你怎么做
一个台阶 一次可能走1阶或2阶 有多少种走法
这个是基础实现是递归，然后优化部分是重点

1.HTTPS的原理，以及具体实现的过程
2.是否了解HTTP2，跟旧版有什么区别？
3.是否了解前端安全性的防范？
4.怎么去监听浏览器的错误捕获？
5.是否了解Promise的用法？
6.Link标签引用CSS，然后用Script标签引用JS，再用ING引用的图片，怎么去监听这些脚本的加载情况？
7.用原生怎么去实现AJAS？
8.JS怎么去实现大数据相加？
9.协商缓存和强缓存的应用场景和具体的实现方式是怎样的？